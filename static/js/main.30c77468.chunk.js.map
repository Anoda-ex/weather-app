{"version":3,"sources":["Components/PageNotFound.js","Scripts/date.js","Components/ErrorMessage.js","Components/Week.js","Scripts/weatherAPI.js","Components/Selector.js","Components/Header.js","App.js","routes.js","index.js"],"names":["PageNotFound","className","DAYS","MONTHS","SelectCityMessage","props","children","withRouter","weather","map","day","date","time","Date","getDay","getDate","getMonth","getWeekDate","dt","console","log","src","icon","alt","description","Math","floor","temp","min","max","getWeather","searchParams","Promise","resolve","reject","city","params","URLSearchParams","lat","get","lon","getParams","fetch","then","response","json","coord","weekWeather","daily","splice","catch","error","useState","searchCities","setSearchCities","showList","setShowList","placeholder","onFocus","onChange","event","param","target","value","searchCitiesArray","length","cities","forEach","toLowerCase","match","push","onClick","history","replace","close","selectCity","cityName","setCityName","showSelector","setShowSelector","useEffect","location","search","setWeekWeather","loading","setLoading","setError","finally","path","render","component","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.30c77468.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <div className=\"page-message\">\r\n            Страница не найдена\r\n        </div>\r\n    )\r\n}\r\n","const DAYS = [\"Sunday\",\"Monday\", \"Tuesday\", \"Wednesday\",\r\n        \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const getDayDate=(time)=>{\r\n    let date=new Date(time*1000)\r\n    let dateString=[\r\n        DAYS[date.getDay()],\r\n        date.getDate(),\r\n        MONTHS[date.getMonth()],\r\n        date.getFullYear()\r\n    ].join(\" \")\r\n    return dateString\r\n}\r\nexport const getWeekDate=(time)=>{\r\n    let date=new Date(time*1000)\r\n\r\n    return [DAYS[date.getDay()],date.getDate(),MONTHS[date.getMonth()]]\r\n}","import React from 'react'\r\n\r\nexport default function SelectCityMessage(props) {\r\n    return (\r\n        <div className=\"page-message\">\r\n            {props.children}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport {getWeekDate} from \"../Scripts/date\"\r\nimport SelectCityMessage from './ErrorMessage'\r\nfunction Week(props) {\r\n    if(!props.weather){\r\n        return <SelectCityMessage></SelectCityMessage>\r\n    }\r\n    return (\r\n        <div className=\"week\">\r\n            {props.weather.map(day=>{\r\n                let date=getWeekDate(day.dt)\r\n                console.log(\"test\",day);\r\n                return <div className=\"week__card\">\r\n                        <div className=\"week__date-wrapper\">\r\n                            <div className=\"week__day\">{date[0]}</div>\r\n                            <div className=\"week__date\">{date[1]}</div>\r\n                            <div className=\"week__month\">{date[2]}</div>  \r\n                        </div>\r\n                        <img className=\"day__image\" src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt=\"\"></img>\r\n                        <div className=\"week__temp-description\">{day.weather[0].description}</div>\r\n                        <div className=\"week__temp-wrapper\">\r\n                            <div className=\"week__temp-column\">\r\n                                <div className=\"week__temp-value\">{Math.floor(day.temp.min)}</div>\r\n                                <div className=\"week__temp-title\">min</div>\r\n                            </div>\r\n                            <div className=\"week__temp-column\">\r\n                                <div className=\"week__temp-value\">{Math.floor(day.temp.max)}</div>\r\n                                <div className=\"week__temp-title\">max</div>\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Week)","export const getParams=(searchParams)=>{\r\n    let params = new URLSearchParams(searchParams);\r\n    let lat = params.get(\"lat\"); \r\n    let lon = params.get(\"lon\");\r\n    let city=params.get(\"city\");\r\n    return {lat,lon,city}\r\n}\r\nexport const getCityName=(searchParams)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        // const coords=getCoords(searchParams)\r\n        // if(coords){\r\n        //     fetch(\r\n        //         `https://api.openweathermap.org/geo/1.0/reverse?lat=${coords.lat}&lon=${coords.lon}&appid=b4f88a6f724b0b945af35f393ab4d22a`\r\n        //     ).then(response=>{\r\n        //         return response.json()\r\n        //     }).then(cityData=>{\r\n        //         resolve(cityData[0].name)\r\n        //     })\r\n        // }else(\r\n        //     reject(\"ошибка\")\r\n        // )\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getWeather=(searchParams)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        let {city}= getParams(searchParams)\r\n\r\n        fetch(\r\n            `https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=b4f88a6f724b0b945af35f393ab4d22a`\r\n        )\r\n        .then(response=>response.json())\r\n        .then(coord=>{\r\n            if(coord[0]){\r\n                fetch(\r\n                    `https://api.openweathermap.org/data/2.5/onecall?lat=${coord[0].lat}&lon=${coord[0].lon}&units=metric&exclude=minutely,alerts,hourly&appid=b4f88a6f724b0b945af35f393ab4d22a`\r\n                ).then(response => {\r\n                    return response.json()\r\n                }).then(weather => {\r\n                        let weekWeather=[...weather.daily]\r\n                        weekWeather.splice(0,1)\r\n                        console.log(weather);\r\n                        resolve(weekWeather)\r\n                })\r\n            }else{\r\n                reject(\"Выбраный город не найден\")\r\n            }\r\n\r\n        }).catch(error=>{return null})\r\n    })\r\n    \r\n}","import React,{useState,useEffect} from 'react'\r\nimport {withRouter} from \"react-router-dom\"\r\nimport cities from \"../Assets/cities.json\"\r\nfunction Selector(props) {\r\n    const [searchCities, setSearchCities] = useState(null)\r\n    const [showList, setShowList] = useState(null)\r\n\r\n    let selectCities=(event)=>{\r\n        let param=event.target.value\r\n        let searchCitiesArray=[]\r\n\r\n        if(param.length>2 && cities){\r\n           \r\n            cities.forEach(city=>{\r\n                if(city.toLowerCase().match(param.toLowerCase())){\r\n                    searchCitiesArray.push(city)\r\n                }\r\n            })\r\n\r\n        }\r\n        setSearchCities(searchCitiesArray)\r\n    }\r\n    let selectCity=(city)=>{\r\n        props.history.replace(\"/weather?city=\"+city)\r\n        setShowList(false)\r\n        props.close()\r\n    }\r\n\r\n\r\n    let inputRef=React.createRef()\r\n    return (\r\n        <div className=\"selector\">\r\n            <input placeholder=\"Enter the name of the city (more than 2 letters)\" className=\"selector__search\" onFocus={()=>{setShowList(true)}} onChange={selectCities}></input>    \r\n            {searchCities?.length>0&&showList&&<ul className=\"selector__cities-list\">\r\n                {searchCities.map(city=>{\r\n                    return <li className=\"selector__cities-item\" onClick={()=>{selectCity(city)}}>{city}</li>\r\n                })}\r\n            </ul>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Selector)","import React,{useState,useEffect} from 'react'\r\nimport { withRouter,NavLink } from 'react-router-dom'\r\nimport { getCityName, getCoords } from '../Scripts/weatherAPI'\r\nimport Selector from './Selector'\r\n\r\nfunction Header(props) {\r\n    const [cityName, setCityName] = useState(null)\r\n    const [showSelector,setShowSelector]=useState(true)\r\n    useEffect(() => {\r\n        getCityName(props.location.search)\r\n        .then(\r\n            (response)=>{setCityName(response)},\r\n            (error)=>{console.log(\"error\",error)}\r\n        )\r\n\r\n\r\n    }, [props.location.search])\r\n    return (\r\n        <header className=\"header\">\r\n                <div className=\"header__wrapper\">\r\n                    <div className=\"header__city\" onClick={()=>{setShowSelector(!showSelector)}}>{cityName?\"Change city\":\"Select city\"} </div>\r\n                    {showSelector&&<Selector close={()=>{setShowSelector(false)}}></Selector>}\r\n                </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import './App.scss';\nimport React, { useState,useEffect } from \"react\"\nimport PageNotFound from './Components/PageNotFound'\nimport Week from \"./Components/Week\"\nimport Header from './Components/Header'\nimport ErrorMessage from \"./Components/ErrorMessage\"\n\nimport {Route, Switch, withRouter } from 'react-router'\nimport * as routes from \"./routes\"\nimport {getWeather} from \"./Scripts/weatherAPI\"\nfunction App(props) {\n\tconst [weekWeather, setWeekWeather] = useState(null)\n\tconst [loading,setLoading]=useState(false)\n\tconst [error,setError]=useState(null)\n\tuseEffect(() => {\n        setLoading(true)\n        getWeather(props.location.search).\n\t\t\tthen(weather=>{setWeekWeather(weather)},error=>{setError(error)}).\n\t\t\tfinally(()=>{setLoading(false)}) \n    }, [props.location.search])\n\n\treturn (\n\t\t<div className=\"app\">\t\n\t\t\t<Header></Header>\n\t\t\t{loading&& <div className=\"page-message\">Loading...</div>}\n\t\t\t{/* {error&&<ErrorMessage>{error}</ErrorMessage>} */}\n\t\t\t{weekWeather&&<Switch>\n\t\t\t\t<Route path={routes.WEATHER} render={()=><Week weather={weekWeather}></Week>}></Route>\n\t\t\t\t<Route path=\"\" component={PageNotFound}></Route>\n\t\t\t</Switch>}\n\t\t</div>\n\t);\n}\n\nexport default withRouter(App);\n","export const WEATHER=\"/weather\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router';\nimport { BrowserRouter,HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n  {/* <BrowserRouter> */}\n    <App />\n  {/* </BrowserRouter> */}\n  </HashRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}